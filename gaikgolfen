#!/usr/bin/env bash

if command -v git >/dev/null; then
    git pull --quiet origin master;
fi

if ! command -v php >/dev/null; then
    echo 'Require php' >&2;
    exit 1;
fi;

if [ "$(php -v | head -n1 | grep -o "PHP [0-9]\+" | cut -c5-)" -lt 7 ]; then
    echo 'Require PHP 7 or higher' >&2;
    exit 2;
fi

declare -A outputs;
credentials_file="$(pwd)/cache/credentials";
cache_file="$(pwd)/cache/session";
interval=600;
columns=4;
course=64;

while getopts 'l:c:i:n:' arg; do
    case "${arg}" in
        'l': login="${OPTARG}"    ;;
        'c': course="${OPTARG}"   ;;
        'i': interval="${OPTARG}" ;;
        'n': columns="${OPTARG}"  ;;
    esac
done

find "${credentials_file}" -mtime +3 --delete
if [ -f "${credentials_file}" ]; then
    if [ -n "${login}" ]; then
        passwd=$($grep "${login}:" "${credentials_file}" | cut -d':' -f2-);
    else
        while read -r line; do
            passwd=$(echo "${line}" | cut -d':' -f2-);
            login=$(echo "${line}" | cut -d':' -f1);
        done < "${credentials_file}";
    fi
fi

if [ -z "${login}" ]; then
    read -p 'Login: ' login;
    if [ -z "${login}" ]; then
        echo 'Login not set' >&2;
        exit 3;
    fi
fi

if [ -z "${passwd}" ]; then
    read -sp 'Password: ' passwd;
    if [ -z "${passwd}" ]; then
        echo 'Password not set' >&2;
        exit 4;
    fi

    passwd=$(echo "${passwd}" | base64);
fi

echo "${login}:${passwd}" > "${credentials_file}";
while true; do
    date +'Last run: %A %B %d %T';
    did_notify=0;

    while read -r dateEntry; do
        if [ -z "${dateEntry}" ]; then
            continue;
        fi

        new_output=$(./src/gaikgolfen.php -v --login="${login}" --passwd="${passwd}" --date="next ${dateEntry}" --columns="${columns}" --display=table --course="${course}" --cache="${cache_file}");
        url=$(echo "${new_output}" | head -n1);
        output=$(echo "${new_output}" | tail -n +2);

        if [ "${outputs[$dateEntry]}" != "${output}" ]; then
            outputs[$dateEntry]="${output}";

            if [ "${did_notify}" -eq 0 ]; then
                did_notify=1;

                if [ -x "$(command -v termux-notification)" ]; then
                    termux-notification --title 'Gaikgolfen?' \
                                        --content 'Tee times changed' \
                                        --image-path "$(pwd)/img/gig.png" \
                                        --vibrate 200,20,20 \
                                        --action "termux-open-url '${url}'";
                fi

                if [ -x "$(command -v notify-send)" ]; then
                    notify-send -i "$(pwd)/img/gig.png" -t 3000 'Gaikgolfen?' 'Tee times changed';
                fi
            fi

            echo "${dateEntry}";
            echo $(echo "${dateEntry}" | sed 's/./=/g');
            echo "${output}";
            echo '';
        fi
    done < "$pwd)/dates.txt";

    sleep "${interval}";
done;
